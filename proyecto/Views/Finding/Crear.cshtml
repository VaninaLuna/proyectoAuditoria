@model proyecto.Bussines.Finding

@{
    ViewBag.Title = "Crear";
    var auditoriaId = ViewBag.AuditoriaId;
    var hallazgoId = ViewBag.HallazgoId;
}

<h3 id="titleFinding">Crear Hallazgo</h3>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", style = "width: 50%", @id = "txtName" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control", style = "width: 50%", @id = "txtCreateDate", @type = "date" } })
                @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", style = "height: 80px;width: 50%;", @id = "txtDescription" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FindingImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="imageInput" class="form-control input-field" accept="image/*" onchange="previewImage(event)" style="width: 40%;" />

                


                <div id="imagePreviewContainer" style="margin-top: 10px;">
                    <img id="imagePreview" src="#" alt="Vista previa" style="max-width: 40%; display: none;" />
                </div>

                <input type="hidden" id="imageBase64" name="FindingImage" />

                @Html.ValidationMessageFor(model => model.FindingImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Estado de Hallazgo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.DropDownList("FindingStatusId", new SelectList(ViewBag.Estados, "Id", "Name"), "-- Seleccione Estado --", new { @class = "form-control", style = "width: 50%", @id = "ddlEstado" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Tipo de Hallazgo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.DropDownList("FindingTypeId", new SelectList(ViewBag.Tipos, "Id", "Name"), "-- Seleccione Tipo --", new { @class = "form-control", style = "width: 50%", @id = "ddlTipo" })
            </div>
        </div>

        <div id="spinnerCrear" style="display:none; text-align:center;">
            <i class="fa fa-spinner fa-spin fa-2x text-primary"></i>
        </div>

        <div class="form-group row">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" onclick="GuardarHallazgo()" id="btnCrearHallazgo" value="Crear Hallazgo" class="btn btn-primary" />
                </div>
            </div>

            <div class="mt-4 text-left" style="padding:10px">
                <a href="@Url.Action("VerAuditoria/" + auditoriaId, "Audit")" class="btn btn-warning btn-sm">Volver a la lista</a>
            </div>
        </div>
    </div>
}

<script src="~/Scripts/jquery-2.2.4.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>

<script>
    var auditoriaId = @auditoriaId;
    var hallazgoId = @hallazgoId;

    $(document).ready(function () {
        if (hallazgoId > 0) {
            //$('#spinnerCrear').show();
            $.ajax({
                url: '/Finding/ObtenerHallazgo?id=' + hallazgoId,
                type: 'GET',
                success: function (data) {
                    if (data.findingDTO) {
                        $('#txtName').val(data.findingDTO.Name);
                        $('#txtDescription').val(data.findingDTO.Description);

                        $('#ddlEstado').val(data.findingDTO.FindingStatus);
                        $('#ddlTipo').val(data.findingDTO.FindingType);

                        // Convertimos la fecha al formato yyyy-MM-dd
                        const createDate = new Date(data.findingDTO.CreateDateString);
                        const fechaFormateada = createDate.toISOString().split('T')[0];
                        $('#txtCreateDate').val(fechaFormateada);

                        var preview = document.getElementById('imagePreview');
                        preview.src = data.findingDTO.FindingImage;
                        preview.style.display = 'block';
                        $('#imageBase64').val(data.findingDTO.FindingImage);
                        $('#imageLabel').text("Imagen seleccionada"); 

                        // Cambiamos título del modal si estás editando
                        $('#titleFinding').text('Editar Hallazgo');
                        $('#btnCrearHallazgo').val('Editar Hallazgo');
                    } else {
                        $('#titleFinding').text('Crear Hallazgo');
                        $('#btnCrearHallazgo').val('Crear Hallazgo');
                    }
                    //('#spinnerCrear').hide();
                },
                error: function () {
                    alert('Error al obtener los datos.');
                    //$('#spinnerCrear').hide();
                }
            });
        }
    });

    function previewImage(event) {
        var reader = new FileReader();

        reader.onload = function () {
            var base64String = reader.result;

            var preview = document.getElementById('imagePreview');
            preview.src = base64String;
            preview.style.display = 'block';

            document.getElementById('imageBase64').value = base64String;
        }

        reader.readAsDataURL(event.target.files[0]);
    }

    function GuardarHallazgo() {
        //if (!validarFormulario()) return;
        const finding = {
            id: hallazgoId,
            Name: $('#txtName').val(),
            CreateDate: $('#txtCreateDate').val(),
            Description: $('#txtDescription').val(),
            FindingImage: $('#imageBase64').val(),
            FindingStatus: $('#ddlEstado').val(),
            FindingType: $('#ddlTipo').val(),
            AuditId: auditoriaId
        };
        $('#spinnerCrear').show();

        $.ajax({
            url: '/Finding/GuardarHallazgo',
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(finding),
            success: function () {
                window.location.href = '/Audit/VerAuditoria/' + auditoriaId;
            },
            error: function () {
                alert('Error al crear la auditoria.');
            },
            complete: function () {
                // Ocultar spinner, mostrar contenido
                $('#spinnerCrear').hide();
            }
        });
    }

    function validarFormulario() {
        let valido = true;

        $('.text-danger').hide();
        if (!$('#txtName').val()) {
            $('#errorName').show(); valido = false;
        }
        if (!$('#txtCreateDate').val()) {
            $('#errorCreateDate').show(); valido = false;
        }
        if (!$('#ddlEstado').val()) {
            $('#errorEstado').show(); valido = false;
        }
        if (!$('#ddlDepartment').val()) {
            $('#errorDepartamento').show(); valido = false;
        }
        if (!$('#ddlAuditor').val()) {
            $('#errorAuditor').show(); valido = false;
        }
        return valido;
    }
</script>